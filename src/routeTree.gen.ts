/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiProductsServerRouteImport } from './routes/api/products'
import { ServerRoute as ApiWebhooksAppUninstalledServerRouteImport } from './routes/api/webhooks/app/uninstalled'

const rootServerRouteImport = createServerRootRoute()

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiProductsServerRoute = ApiProductsServerRouteImport.update({
  id: '/api/products',
  path: '/api/products',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiWebhooksAppUninstalledServerRoute =
  ApiWebhooksAppUninstalledServerRouteImport.update({
    id: '/api/webhooks/app/uninstalled',
    path: '/api/webhooks/app/uninstalled',
    getParentRoute: () => rootServerRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about'
  id: '__root__' | '/' | '/about'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
}
export interface FileServerRoutesByFullPath {
  '/api/products': typeof ApiProductsServerRoute
  '/api/webhooks/app/uninstalled': typeof ApiWebhooksAppUninstalledServerRoute
}
export interface FileServerRoutesByTo {
  '/api/products': typeof ApiProductsServerRoute
  '/api/webhooks/app/uninstalled': typeof ApiWebhooksAppUninstalledServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/products': typeof ApiProductsServerRoute
  '/api/webhooks/app/uninstalled': typeof ApiWebhooksAppUninstalledServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/products' | '/api/webhooks/app/uninstalled'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/products' | '/api/webhooks/app/uninstalled'
  id: '__root__' | '/api/products' | '/api/webhooks/app/uninstalled'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiProductsServerRoute: typeof ApiProductsServerRoute
  ApiWebhooksAppUninstalledServerRoute: typeof ApiWebhooksAppUninstalledServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/products': {
      id: '/api/products'
      path: '/api/products'
      fullPath: '/api/products'
      preLoaderRoute: typeof ApiProductsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/webhooks/app/uninstalled': {
      id: '/api/webhooks/app/uninstalled'
      path: '/api/webhooks/app/uninstalled'
      fullPath: '/api/webhooks/app/uninstalled'
      preLoaderRoute: typeof ApiWebhooksAppUninstalledServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiProductsServerRoute: ApiProductsServerRoute,
  ApiWebhooksAppUninstalledServerRoute: ApiWebhooksAppUninstalledServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
